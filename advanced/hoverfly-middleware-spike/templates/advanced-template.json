{
	"data": {
		"pairs": [
			{
				"request": {
					"path": [
						{
							"matcher": "exact",
							"value": "/test"
						}
					],
					"method": [
						{
							"matcher": "exact",
							"value": "GET"
						}
					]
				},
				"response": {
					"status": 200,
					"body": "{\n\t\"randomIntValue\": {{ randomIntegerRange 1000 9999 }}, \n\t\"requestType\": \"{{ Request.Method }}\", \n\t\"currentTimeISO\": \"{{ now \"\" \"\" }}\", \n\t\"timeLocalOneDayAgo\":\"{{ now \"-1d\" \"02/Jan/06@03:04:05 07\" }}\", \n\t\"randomBoolean\": {{ randomBoolean }},\n\t\"requestPath\": \"{{ Request.Path }}\", \n\t\"randomEmail\": \"{{ randomEmail }}\", \n\t\"random12charString\": \"{{ randomStringLength 12 }}\",\n\t\"requestHeaderabc\": \"{{ Request.Header.Abc }}\" \n}",
					"encodedBody": false,
					"headers":{"Content-Type":["application/json"],"abc-Request-Header":["{{#if Request.Header.Abc}}{{#equal Request.Header.Abc 123}}as expected, value is {{/equal}}{{ Request.Header.Abc }}{{else}}no abc request header{{/if}}"]},
					"templated": true
				}
			}
		]
	},
	"meta": {
		"schemaVersion": "v5.1",
		"hoverflyVersion": "v1.3.0",
		"timeExported": "2020-08-30T22:01:40+10:00"
	}
}